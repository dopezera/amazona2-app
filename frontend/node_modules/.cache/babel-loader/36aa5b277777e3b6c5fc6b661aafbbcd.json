{"ast":null,"code":"import axios from \"axios\";\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nexport const register = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    console.log(localStorage);\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message + ': ' + error.response.statusText\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    console.log(localStorage);\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message + ': ' + error.response.statusText\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"sources":["/home/dope/Documents/coding/amazona2/frontend/src/actions/userActions.js"],"names":["axios","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","email","password","dispatch","type","payload","name","data","post","localStorage","setItem","JSON","stringify","console","log","error","USER_REGISTER_FAIL","response","message","statusText","signin","signout","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\n\nexport const register = (email, password) => async(dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: { name, email, password } });\n    try {\n        const { data } = await axios.post('/api/users/register', { name, email, password });\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        console.log(localStorage);\n    } catch (error) {\n        dispatch ({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message \n            ? error.response.data.message\n            : error.message + ': ' + error.response.statusText\n        });\n    }\n};\n\nexport const signin = (email, password) => async(dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: { email, password } });\n    try {\n        const { data } = await axios.post('/api/users/signin', { email, password });\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n        console.log(localStorage);\n    } catch (error) {\n        dispatch ({\n            type: USER_SIGNIN_FAIL,\n            payload: error.response && error.response.data.message \n            ? error.response.data.message\n            : error.message + ': ' + error.response.statusText\n        });\n    }\n};\n\nexport const signout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    localStorage.removeItem('cartItems');\n    dispatch({ type: USER_SIGNOUT });\n}"]},"metadata":{},"sourceType":"module"}