{"ast":null,"code":"var _jsxFileName = \"/home/dope/Documents/coding/amazona2/frontend/src/screens/CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart } from '../actions/cartActions';\nimport MessageBox from '../components/MessageBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartScreen(props) {\n  _s();\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = id => {//delete action\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row-top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [\"Cart is empty. \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Go Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image,\n              alt: item.name,\n              className: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"min-30\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/product/${item.product}`,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: item.qty,\n              onChange: e => dispatch(addToCart(item.product), Number(e.target.value)),\n              children: [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: x + 1,\n                children: x + 1\n              }, x + 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 61\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"$\", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeFromCartHandler(item.product),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 37\n          }, this)]\n        }, item.product, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartScreen, \"O8kV4FMad4uUEER48J0xtNwHiNw=\", true, function () {\n  return [useDispatch];\n});\n\n_c = CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["/home/dope/Documents/coding/amazona2/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","useDispatch","Link","addToCart","MessageBox","CartScreen","props","productId","match","params","id","qty","location","search","Number","split","cart","useSelector","state","cartItems","dispatch","removeFromCartHandler","length","map","item","image","name","product","e","target","value","Array","countInStock","keys","x","price"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addToCart } from '../actions/cartActions';\nimport MessageBox from '../components/MessageBox';\n\nexport default function CartScreen(props) {\n    const productId = props.match.params.id;\n    const qty = props.location.search\n    ? Number(props.location.search.split('=')[1])\n    : 1;\n\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n    const dispatch = useDispatch();\n\n    useEffect(() =>{\n        if(productId){\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) =>{\n        //delete action\n    }\n\n    return (\n        <div className=\"row-top\">\n            <div className=\"col-2\">\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0?<MessageBox>\n                Cart is empty. <Link to=\"/\">Go Shopping</Link>\n                </MessageBox>\n                :\n                (\n                    <ul>\n                        {\n                            cartItems.map((item) => (\n                                <li key={item.product}>\n                                    <div className=\"row\">\n                                        <img src={item.image} alt ={item.name} className=\"small\">\n                                        </img>\n                                    </div>\n                                    <div className=\"min-30\">\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </div>\n                                    <div>\n                                        <select value={item.qty} onChange={e => dispatch(addToCart(item.product), Number(e.target.value))}>\n                                        {\n                                                        [...Array(item.countInStock).keys()].map( \n                                                            x => (\n                                                            <option key={x+1} value={x+1}>{x+1}</option>\n                                                        )\n                                                        )}\n                                        </select>\n                                    </div>\n                                    <div>\n                                        ${item.price}\n                                    </div>\n                                    <div>\n                                        <button type=\"button\" onClick={() => removeFromCartHandler(item.product)}>Delete</button>\n                                    </div>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                )\n                }\n            </div>\n            \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}