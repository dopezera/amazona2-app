{"ast":null,"code":"var _jsxFileName = \"/home/dope/Documents/coding/amazona2/frontend/src/screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Product from '../components/Product';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n\n  /*const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  nos livramos disso aqui quando passamos a usar redux*/\n  const dispatch = useDispatch();\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productList; //essa funcao a seguir roda após o componente ser renderizado\n\n  useEffect(() => {\n    dispatchEvent(ListProducts());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row center\",\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Product, {\n        product: product\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeScreen, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/home/dope/Documents/coding/amazona2/frontend/src/screens/HomeScreen.js"],"names":["React","useEffect","Product","MessageBox","LoadingBox","useDispatch","useSelector","HomeScreen","dispatch","productList","state","loading","error","products","dispatchEvent","ListProducts","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC;AACJ;AACA;AACA;AAEI,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,WAAW,GAAGH,WAAW,CAAEI,KAAK,IAAIA,KAAK,CAACD,WAAjB,CAA/B;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,WAArC,CATiC,CAWjC;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,aAAa,CAACC,YAAY,EAAb,CAAb;AACH,GAFQ,EAEN,CAACP,QAAD,CAFM,CAAT;AAIA,sBACI;AAAA,cACKG,OAAO,gBACR,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADQ,GAEJC,KAAK,gBACT,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,QAApB;AAAA,gBAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKC,QAAQ,CAACG,GAAT,CAAcC,OAAD,iBACd,QAAC,OAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAcA,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhCuBX,U;UAOHF,W,EACGC,W;;;KARAC,U","sourcesContent":["import React, { useEffect } from 'react';\n\nimport Product from '../components/Product';\nimport MessageBox from '../components/MessageBox';\nimport LoadingBox from '../components/LoadingBox';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport default function HomeScreen() {\n\n    /*const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n    nos livramos disso aqui quando passamos a usar redux*/\n\n    const dispatch = useDispatch();\n    const productList = useSelector( state => state.productList);\n    const { loading, error, products } = productList;\n\n    //essa funcao a seguir roda após o componente ser renderizado\n    \n    useEffect(() => {\n        dispatchEvent(ListProducts());\n    }, [dispatch]);\n\n    return (\n        <div>\n            {loading ? (\n            <LoadingBox></LoadingBox>\n            ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n            <div className=\"row center\">\n                {products.map((product) => (\n                <Product key={product._id} product={product}></Product>\n                ))}\n            </div>\n            )}   \n        </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}