{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userSigninReducer } from './reducers/userReducer';\nconst initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n  } //isso aqui combinado ao que tá em cartActions é que faz o carrinho ser persistente mesmo com refresh da pagina\n\n};\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userSignin: userSigninReducer\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\nexport default store;","map":{"version":3,"sources":["/home/dope/Documents/coding/amazona2/frontend/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","thunk","cartReducer","productDetailsReducer","productListReducer","userSigninReducer","initialState","cart","cartItems","localStorage","getItem","JSON","parse","reducer","productList","productDetails","userSignin","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADS,GAEV;AAHC,GADW,CAMjB;;AANiB,CAArB;AAQA,MAAMG,OAAO,GAAGf,eAAe,CAAC;AAC5BgB,EAAAA,WAAW,EAAEV,kBADe;AAE5BW,EAAAA,cAAc,EAAEZ,qBAFY;AAG5BI,EAAAA,IAAI,EAAEL,WAHsB;AAI5Bc,EAAAA,UAAU,EAAEX;AAJgB,CAAD,CAA/B;AAMA,MAAMY,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CpB,OAAvE;AACA,MAAMqB,KAAK,GAAGpB,WAAW,CACrBa,OADqB,EAErBP,YAFqB,EAGrBW,eAAe,CAACpB,eAAe,CAACI,KAAD,CAAhB,CAHM,CAAzB;AAMA,eAAemB,KAAf","sourcesContent":["import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { cartReducer } from './reducers/cartReducers';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { userSigninReducer } from './reducers/userReducer';\n\nconst initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        :[],\n    },\n    //isso aqui combinado ao que tá em cartActions é que faz o carrinho ser persistente mesmo com refresh da pagina\n};\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userSignin: userSigninReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer, \n    initialState, \n    composeEnhancer(applyMiddleware(thunk))\n    );\n\nexport default store;"]},"metadata":{},"sourceType":"module"}